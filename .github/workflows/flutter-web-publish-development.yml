# This workflows will upload a Python Package using Twine when a release is created.
# The package will include a stable version of the actionpi-ui that will be built here in this workflow.

name: Web - develop

on:
  push:
    branches:
      - 'develop'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.6'
      - run: flutter pub get
      - run: dart pub global activate melos
      #- run: flutter test
      - run: melos run build:web:release #--web-renderer html --release
      - run: melos run build:android:release
      - run: mkdir ./apps/weekly_menu_app/build/web/apk
      - run: mv ./apps/weekly_menu_app/build/app/outputs/flutter-apk/app-release.apk ./apps/weekly_menu_app/build/web/apk/weeklymenu-release.apk
      - name: FTP Deploy
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }} # FTP username
          password: ${{ secrets.FTP_PASSWORD }} # FTP password
          server-dir: ${{ secrets.FTP_REMOTE_FOLDER }}
          local-dir: ./build/web/
